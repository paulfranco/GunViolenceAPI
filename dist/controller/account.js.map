{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","Account","register","username","body","email","password","err","account","send","passport","authenticate","session","status","scope","generateAccessToken","respond","get","logout","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAC/B,QAAIC,MAAM,sBAAV;;AAEA;AACAA,QAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCC,0BAAQC,QAAR,CAAiB,IAAID,iBAAJ,CAAY,EAAEE,UAAUJ,IAAIK,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA4DN,IAAIK,IAAJ,CAASE,QAArE,EAA+E,UAASC,GAAT,EAAcC,OAAd,EAAuB;AAClG,gBAAID,GAAJ,EAAS;AACLP,oBAAIS,IAAJ,CAASF,GAAT;AACH,aAFD,MAEO;AACHG,mCAASC,YAAT,CACI,OADJ,EACa;AACLC,6BAAS;AADJ,iBADb,EAGOb,GAHP,EAGYC,GAHZ,EAGiB,YAAM;AACfA,wBAAIa,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,kCAArB;AACH,iBALL;AAOH;AACJ,SAZD;AAaH,KAdD;;AAgBA;AACAZ,QAAIC,IAAJ,CAAS,QAAT,EAAmBY,mBAASC,YAAT,CACf,OADe,EACN;AACLC,iBAAS,KADJ;AAELE,eAAO;AAFF,KADM,CAAnB,EAIQC,mCAJR,EAI6BC,uBAJ7B;;AAMA;AACAnB,QAAIoB,GAAJ,CAAQ,SAAR,EAAmBN,4BAAnB,EAAiC,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC3CA,YAAIkB,MAAJ;AACAlB,YAAIa,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,yBAArB;AACH,KAHD;;AAKA;AACAZ,QAAIoB,GAAJ,CAAQ,KAAR,EAAeN,4BAAf,EAA6B,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACvCA,YAAIa,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBpB,IAAIqB,IAAzB;AACH,KAFD;;AAIA,WAAOvB,GAAP;AACH,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db }) => {\n    let api = Router();\n\n    //'/v1/account'\n    api.post('/register', (req, res) => {\n        Account.register(new Account({ username: req.body.email }), req.body.password, function(err, account) {\n            if (err) {\n                res.send(err);\n            } else {\n                passport.authenticate(\n                    'local', {\n                        session: false\n                    })(req, res, () => {\n                        res.status(200).send('Successfully created new account');\n                    }\n                );\n            }\n        });\n    });\n\n    // '/v1/account/login' - Log In\n    api.post('/login', passport.authenticate(\n        'local', {\n            session: false,\n            scope: []\n        }), generateAccessToken, respond);\n\n    // 'v1/account/logout' - Log Out\n    api.get('/logout', authenticate, (req, res) => {\n        res.logout();\n        res.status(200).send(\"Successfully logged out\");\n    });\n\n    // Loged in user\n    api.get('/me', authenticate, (req, res) => {\n        res.status(200).json(req.user);\n    });\n\n    return api;\n}"]}